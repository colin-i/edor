
on:
 workflow_dispatch:
env:
 #for upload
 GITHUB_TOKEN: ${{ secrets.PAT }}

jobs:
  archarmbuild:
    runs-on: ubuntu-24.04-arm
    container: image0/archarm:latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: build
      run: |
        #at checkout and fetch-tags true, attention that fetch-depth is 1 at default, and to test is easier with this
        git config --global --add safe.directory .  #this is not required outside of this archarm
        version=`git ls-remote --tags --sort='v:refname' | tail -n1 | sed 's/.*\///' | grep -o "[^^]*" | head -1`

        site_at_gh=`cat debian/control | grep ^Homepage | grep -o "[^ ]*$"`
        repo_at_gh=`echo ${site_at_gh} | grep -o [^/]*$`
        text=`curl https://api.github.com/graphql -X POST -H "Authorization: bearer ${{ secrets.PAT }}" -d '
        {
         "query": "query { repository ( owner: \"colin-i\", name: \"'"${repo_at_gh}"'\" ) { release ( tagName: \"'"${version}"'\" ) { databaseId }} }"
        }'`
        id=`echo ${text} | grep -Poe "(?<=databaseId\":)[^}]*"`
        up_url=https://uploads.github.com/repos/colin-i/edor/releases/${id}/assets{?name,label}
        here=`pwd`
        cd /home/alarm

        name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
        su alarm -c 'git clone -n --depth=1 --filter=tree:0 https://github.com/colin-i/pkgbuilds'
        cd pkgbuilds
        su alarm -c "git sparse-checkout set --no-cone /${name}"
        su alarm -c 'git checkout'
        cd ${name}
        su alarm -c makepkg
        ls
        nm=`ls | grep ".*\.xz$" | grep -v debug`
        nm2=`echo ${nm} | sed s/-any/-arch-aarch64/`
        mv ${nm} ${here}/${nm2}

        echo "file=${nm2}" >> $GITHUB_ENV
        echo "up_url=${up_url}" >> $GITHUB_ENV
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ env.up_url }}
        asset_path: ./${{ env.file }}
        asset_name: ${{ env.file }}
        asset_content_type: application/x-xz
